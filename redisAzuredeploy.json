{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique namespace for the Storage Account where the Virtual Machine's disks will be placed"
      }
    },
	"adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Administrator user name used when provisioning virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password used when provisioning virtual machines"
      }
    },    
    "location": {
      "type": "string",
      "allowedValues": [
        "East US 2",
		"West US",
        "East US",
        "East Asia",
        "Southeast Asia",
        "West Europe"
      ],
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "geometricSearchServiceVnet",
      "metadata": {
        "description": "The arbitrary name of the virtual network provisioned for the Redis cluster"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "The network address space for the virtual network"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "RedisSubnet",
      "metadata": {
        "description": "Subnet name for the virtual network that resources will be provisioned in to"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Address space for the virtual network subnet"
      }
    },
    "nodeAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.1",
      "metadata": {
        "description": "The IP address prefix that will be used for constructing a static private IP address for each node in the cluster"
      }
    },    
    "redisVersion": {
      "type": "string",
      "defaultValue": "stable",
      "metadata": {
        "description": "The version of the Redis package to be deployed on the cluster (or use 'stable' to pull in the latest and greatest)"
      }
    },
	"vmSizeMember": {
      "type": "string",
      "defaultValue": "Standard_A4",
      "allowedValues": [
        "Standard_A0",
		"Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],	  
      "metadata": {
        "description": "The size of the virtual machines that will host redis"
      }
    },
	"redisAvailabilitySet": {
      "type": "string",
      "defaultValue": "asRedisCache",      	  
      "metadata": {
        "description": "The name of the redis cache machine availability set"
      }
    },    
	"NumberOfSlaves": {
      "type": "int",	
	  "defaultValue": 0,	  
      "metadata": {
        "description": "The number of slave redis instances"
		}	  
	},
	"NumberOfMasters": {
      "type": "int",   
	  "defaultValue": 1,	   
      "metadata": {
        "description": "The number of master redis instances"
	  }
	},
	"TotalNumberOfNodes": {
      "type": "int",	
	  "defaultValue": 1,	  
      "metadata": {
        "description": "The total number of redis instances"
		}	  
	},
	"RedisInstancesNumber":{
	  "type": "int",	
	  "defaultValue": 4,	  
      "metadata": {
        "description": "The number of instances to deploy on each Redis Node"
		}	 
	}
  },
  "variables": {
    "_comment1": "/* ReDefine the origin of the script Url */",
	"scriptUrl": "C:/Users/omsaaf.3DSEMANTIX/Source/Repos/azure-quickstart-templates/redis-high-availability/Redis-3DSemantix/",
	"templateBaseUrl": "[variables('scriptUrl')]",
	
	"vmTemplate": "[concat(variables('templateBaseUrl'), 'redisAzurenode-resources.json')]",
    "osFamilyUbuntu": {
      "imagePublisher": "Canonical",
      "imageOffer": "UbuntuServer",
      "imageSKU": "14.04.2-LTS"
    },
    
	"vmStorageAccountContainerName": "vhd-redis",
    "vmStorageAccountDomain": ".blob.core.windows.net",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",    
    "jumpboxTemplateDisabled": "redisAzureEmpty-resources.json",
    "sharedTemplateUrl": "[concat(variables('templateBaseUrl'), 'redisAzureShared-resources.json')]",

	"_comment2": "/* Define the fiels of the objet commonSettings which was declared in the file redisAzureEmpty-resources.json Settings common to all redis virtual machines  */",
    "commonSettings": {
      "availabilitySetName": "[parameters('redisAvailabilitySet')]",
      "location": "[parameters('location')]"
    },
	
	"_comment3": "/* Storage account settings*/",
    "storageSettings": {
      "vhdStorageAccountName": "[parameters('storageAccountName')]",
      "vhdContainerName": "[variables('vmStorageAccountContainerName')]",
      "destinationVhdsContainer": "[concat('https://', parameters('storageAccountName'), variables('vmStorageAccountDomain'), '/', variables('vmStorageAccountContainerName'), '/')]"
    },
	
    "networkSettings": {
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "addressPrefix": "[parameters('addressPrefix')]",
      "subnetName": "[parameters('subnetName')]",
      "subnetPrefix": "[parameters('subnetPrefix')]",
      "subnetRef": "[concat(variables('vnetID'), '/subnets/', parameters('subnetName'))]",
      "machineIpPrefix": "[parameters('nodeAddressPrefix')]"
    },
	
    "machineSettings": {
      "adminUsername": "[parameters('adminUsername')]",
      "machineNamePrefix": "redisnode-",
      "osImageReference": {
        "publisher": "[variables('osFamilyUbuntu').imagePublisher]",
        "offer": "[variables('osFamilyUbuntu').imageOffer]",
        "sku": "[variables('osFamilyUbuntu').imageSKU]",
        "version": "latest"
      }
    },
    
	"installCommand": "[concat('redis-cluster-install.sh  ', ' -v ', parameters('redisVersion'), ' -c ', parameters('TotalNumberOfNodes'), ' -m ', parameters('NumberOfMasters'), ' -s ', parameters('NumberOfSlaves'), ' -p ', variables('networkSettings').machineIpPrefix, ' -n ', parameters('RedisInstancesNumber'))]",
	
    "vmScripts": {
      "scriptsToDownload": [
        "[concat(variables('scriptUrl'), 'redis-install.sh')]",
        "[concat(variables('scriptUrl'), 'redis-setup.sh')]",
        "[concat(variables('scriptUrl'), 'redis-sentinel-startup.sh')]"
      ],
      "installCommand": "[concat('bash ', variables('installCommand'))]",
      "setupCommand": "[concat('bash ', variables('installCommand'), ' -l')]"
    },
	"TotalNumberOfNodes":"[parameters('TotalNumberOfNodes')]"
  },
  "resources": [
    {
      "name": "shared-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('sharedTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "commonSettings": {
            "value": "[variables('commonSettings')]"
          },
          "storageSettings": {
            "value": "[variables('storageSettings')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          }
        }
      }
    },    
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('node-resources', copyindex())]",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'shared-resources')]"
      ],
      "copy": {
        "name": "memberNodesLoop",
        "count": "[variables('TotalNumberOfNodes')]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "commonSettings": {
            "value": "[variables('commonSettings')]"
          },
          "storageSettings": {
            "value": "[variables('storageSettings')]"
          },
          "networkSettings": {
            "value": "[variables('networkSettings')]"
          },
          "machineSettings": {
            "value": {
              "adminUsername": "[variables('machineSettings').adminUsername]",
              "machineNamePrefix": "[variables('machineSettings').machineNamePrefix]",
              "osImageReference": "[variables('machineSettings').osImageReference]",
              "vmSize": "[variables('vmSizeMember')]",
              "machineIndex": "[copyindex()]",
              "vmScripts": "[variables('vmScripts').scriptsToDownload]",
              "commandToExecute": "[concat(variables('vmScripts').installCommand, ' -i ', copyindex())]"
            }
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          }
        }
      }
    }    
  ],
  "outputs": {
    "installCommand": {
      "value": "[variables('vmScripts').installCommand]",
      "type": "string"
    },
    "setupCommand": {
      "value": "[variables('vmScripts').setupCommand]",
      "type": "string"
    }
  }
}
